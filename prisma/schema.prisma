datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
generator client{
  provider = "prisma-client-js"
}

enum UserRole{
  ADMIN
  USER
}

model User {
  id            String      @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  password      String?  
  role          UserRole @default(USER)
  subscription String?   @default("free")
  accountCreationTimestamp  DateTime @default(now())
  isTwoFAEnabled Boolean @default(false)
  twoFAConfirmation    TwoFAConfirmation?
}
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken{
  id String @id @default(cuid())
  email  String
  token  String @unique
  expires DateTime

  @@unique([email,token])
}

model ResetPasswordToken{
  id String @id @default(cuid())
  email  String
  token  String @unique
  expires DateTime

  @@unique([email,token])
}

model TwoFAToken{
  id String @id @default(cuid())
  email  String
  token  String @unique
  expires DateTime

  @@unique([email,token])
}

model TwoFAConfirmation{
  id Int @id @default(autoincrement())
  userId String
  user User @relation(fields:[userId],references:[id],onDelete: Cascade)
  @@unique([userId])
}

